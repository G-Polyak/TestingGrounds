import puppeteer from "puppeteer";

let browser;
let page;

beforeAll(async () => {
    browser = await puppeteer.launch({
        headless: false
    });
    page = await browser.newPage();
    await page.goto("http://localhost:3000/");
});

// 1
test("renders title", async () => {
    await page.waitForSelector(".title");

    const header = await page.$eval(".title", e => e.innerHTML);
    expect(header).toBe("Mortgage Calculator");
});

// 2
test("renders tables", async () => {
    await page.waitForSelector(".bigTable");

    const bigTable = await page.$eval(".bigTable", e => e.innerHTML);
    var t1 = new DOMParser().parseFromString(bigTable, "text/html");
    await page.waitForSelector(".prettyTable");
    const prettyTable = await page.$eval(".prettyTable", e => e.innerHTML);
    var t2 = new DOMParser().parseFromString(prettyTable, "text/html");
    expect(t1.hasChildNodes());
    expect(t2.hasChildNodes());
});

// 3
test("button calculates mortgage", async () => {
    await page.$eval("#sp", e => e.value = "100000");
    await page.$eval("#i", e => e.value = "0.04");
    await page.$eval("#p", e => e.value = "1500");

    await page.waitForSelector(".compute");
    await page.click(".compute");
    await new Promise((r) => setTimeout(r, 1000));

    await page.waitForSelector(".prettyTable");
    const result = await page.$$eval(".prettyTable", rows => {
        return Array.from(rows, row => {
            const columns = row.querySelectorAll('td');
            return Array.from(columns, column => column.innerText);
        });
    });
    const compare = getCompareTable();
    for (let i = 1; i < result.length; i++) {

        for (let j = 0; j < result[j].length; j++) {
            expect(result[i][j]).toBe(compare[i - 1][j]);
        }

    }
});

function getCompareTable() {
    return [["$100000.0000", "$3.3333", "$1500.0000", "$98503.3333"],
        ["$98503.3333", "$3.2834", "$1500.0000", "$97006.6168"],
        ["$97006.6168", "$3.2336", "$1500.0000", "$95509.8503"],
        ["$95509.8503", "$3.1837", "$1500.0000", "$94013.0340"],
        ["$94013.0340", "$3.1338", "$1500.0000", "$92516.1678"],
        ["$92516.1678", "$3.0839", "$1500.0000", "$91019.2516"],
        ["$91019.2516", "$3.0340", "$1500.0000", "$89522.2856"],
        ["$89522.2856", "$2.9841", "$1500.0000", "$88025.2697"],
        ["$88025.2697", "$2.9342", "$1500.0000", "$86528.2039"],
        ["$86528.2039", "$2.8843", "$1500.0000", "$85031.0881"],
        ["$85031.0881", "$2.8344", "$1500.0000", "$83533.9225"],
        ["$83533.9225", "$2.7845", "$1500.0000", "$82036.7070"],
        ["$82036.7070", "$2.7346", "$1500.0000", "$80539.4415"],
        ["$80539.4415", "$2.6846", "$1500.0000", "$79042.1262"],
        ["$79042.1262", "$2.6347", "$1500.0000", "$77544.7609"],
        ["$77544.7609", "$2.5848", "$1500.0000", "$76047.3457"],
        ["$76047.3457", "$2.5349", "$1500.0000", "$74549.8806"],
        ["$74549.8806", "$2.4850", "$1500.0000", "$73052.3656"],
        ["$73052.3656", "$2.4351", "$1500.0000", "$71554.8007"],
        ["$71554.8007", "$2.3852", "$1500.0000", "$70057.1859"],
        ["$70057.1859", "$2.3352", "$1500.0000", "$68559.5211"],
        ["$68559.5211", "$2.2853", "$1500.0000", "$67061.8064"],
        ["$67061.8064", "$2.2354", "$1500.0000", "$65564.0418"],
        ["$65564.0418", "$2.1855", "$1500.0000", "$64066.2273"],
        ["$64066.2273", "$2.1355", "$1500.0000", "$62568.3628"],
        ["$62568.3628", "$2.0856", "$1500.0000", "$61070.4485"],
        ["$61070.4485", "$2.0357", "$1500.0000", "$59572.4841"],
        ["$59572.4841", "$1.9857", "$1500.0000", "$58074.4699"],
        ["$58074.4699", "$1.9358", "$1500.0000", "$56576.4057"],
        ["$56576.4057", "$1.8859", "$1500.0000", "$55078.2916"],
        ["$55078.2916", "$1.8359", "$1500.0000", "$53580.1275"],
        ["$53580.1275", "$1.7860", "$1500.0000", "$52081.9135"],
        ["$52081.9135", "$1.7361", "$1500.0000", "$50583.6496"],
        ["$50583.6496", "$1.6861", "$1500.0000", "$49085.3357"],
        ["$49085.3357", "$1.6362", "$1500.0000", "$47586.9719"],
        ["$47586.9719", "$1.5862", "$1500.0000", "$46088.5581"],
        ["$46088.5581", "$1.5363", "$1500.0000", "$44590.0944"],
        ["$44590.0944", "$1.4863", "$1500.0000", "$43091.5807"],
        ["$43091.5807", "$1.4364", "$1500.0000", "$41593.0171"],
        ["$41593.0171", "$1.3864", "$1500.0000", "$40094.4036"],
        ["$40094.4036", "$1.3365", "$1500.0000", "$38595.7400"],
        ["$38595.7400", "$1.2865", "$1500.0000", "$37097.0266"],
        ["$37097.0266", "$1.2366", "$1500.0000", "$35598.2631"],
        ["$35598.2631", "$1.1866", "$1500.0000", "$34099.4497"],
        ["$34099.4497", "$1.1366", "$1500.0000", "$32600.5864"],
        ["$32600.5864", "$1.0867", "$1500.0000", "$31101.6731"],
        ["$31101.6731", "$1.0367", "$1500.0000", "$29602.7098"],
        ["$29602.7098", "$0.9868", "$1500.0000", "$28103.6966"],
        ["$28103.6966", "$0.9368", "$1500.0000", "$26604.6333"],
        ["$26604.6333", "$0.8868", "$1500.0000", "$25105.5202"],
        ["$25105.5202", "$0.8369", "$1500.0000", "$23606.3570"],
        ["$23606.3570", "$0.7869", "$1500.0000", "$22107.1439"],
        ["$22107.1439", "$0.7369", "$1500.0000", "$20607.8808"],
        ["$20607.8808", "$0.6869", "$1500.0000", "$19108.5677"],
        ["$19108.5677", "$0.6370", "$1500.0000", "$17609.2047"],
        ["$17609.2047", "$0.5870", "$1500.0000", "$16109.7917"],
        ["$16109.7917", "$0.5370", "$1500.0000", "$14610.3287"],
        ["$14610.3287", "$0.4870", "$1500.0000", "$13110.8157"],
        ["$13110.8157", "$0.4370", "$1500.0000", "$11611.2527"],
        ["$11611.2527", "$0.3870", "$1500.0000", "$10111.6397"],
        ["$10111.6397", "$0.3371", "$1500.0000", "$8611.9768"],
        ["$8611.9768", "$0.2871", "$1500.0000", "$7112.2639"],
        ["$7112.2639", "$0.2371", "$1500.0000", "$5612.5009"],
        ["$5612.5009", "$0.1871", "$1500.0000", "$4112.6880"],
        ["$4112.6880", "$0.1371", "$1500.0000", "$2612.8251"],
        ["$2612.8251", "$0.0871", "$1500.0000", "$1112.9122"],
        ["$1112.9122", "$0.0371", "$1112.9493", "$0.0000"]];
}

afterAll(() => {
    browser.close();
});
